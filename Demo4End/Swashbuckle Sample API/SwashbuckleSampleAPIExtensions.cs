// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Demo4Start
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;

    /// <summary>
    /// Extension methods for SwashbuckleSampleAPI.
    /// </summary>
    public static partial class SwashbuckleSampleAPIExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static void ApiVversionHelloWorldGet(this ISwashbuckleSampleAPI operations)
            {
                Task.Factory.StartNew(s => ((ISwashbuckleSampleAPI)s).ApiVversionHelloWorldGetAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionHelloWorldGetAsync(this ISwashbuckleSampleAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ApiVversionHelloWorldGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false);
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static void ApiVversionHelloWorldPost(this ISwashbuckleSampleAPI operations)
            {
                Task.Factory.StartNew(s => ((ISwashbuckleSampleAPI)s).ApiVversionHelloWorldPostAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionHelloWorldPostAsync(this ISwashbuckleSampleAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ApiVversionHelloWorldPostWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false);
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static void ApiVversionHelloWorldByIdGet(this ISwashbuckleSampleAPI operations, int id)
            {
                Task.Factory.StartNew(s => ((ISwashbuckleSampleAPI)s).ApiVversionHelloWorldByIdGetAsync(id), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiVversionHelloWorldByIdGetAsync(this ISwashbuckleSampleAPI operations, int id, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ApiVversionHelloWorldByIdGetWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false);
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static string ApiValuesGet(this ISwashbuckleSampleAPI operations)
            {
                return Task.Factory.StartNew(s => ((ISwashbuckleSampleAPI)s).ApiValuesGetAsync(), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> ApiValuesGetAsync(this ISwashbuckleSampleAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiValuesGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
